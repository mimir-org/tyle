name: CI - Docker Production

on:
  push:
    branches: [main]

  workflow_dispatch:

jobs:
  # Get latest release
  get-latest-release:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.last_release.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v1
      - name: "call action"
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          exclude_types: "draft|prerelease"
          view_top: 1
      - name: "Print result"
        run: |
          echo "tag_name: ${{ steps.last_release.outputs.tag_name }}"
  
  # Build and push client to dockerhub
  build-client:
    uses: mimir-org/mimir-actions/.github/workflows/docker-build-push-cached.yaml@main
    needs: get-latest-release
    if: needs.get-latest-release.outputs.tag_name!=''
    with:
      repository: typelibrary-client
      tags: |
        latest
        ${{needs.get-latest-release.outputs.tag_name}}
      context: ./src/client
      file: ./src/client/Dockerfile
      target: final
      hash_files_template: "**/package-lock.json"
      push: true
      use_dockerhub: true
    secrets:
      DOCKERHUB_ORG: mimirorg
      DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
      DOCKERHUB_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
  
  # Build and push server to dockerhub
  build-server:
    uses: mimir-org/mimir-actions/.github/workflows/docker-build-push-cached.yaml@main
    needs: get-latest-release
    if: needs.get-latest-release.outputs.tag_name!=''
    with:
      repository: typelibrary-server
      tags: |
        latest
        ${{needs.get-latest-release.outputs.tag_name}}
      context: ./src/server
      file: ./src/server/Dockerfile
      target: final
      hash_files_template: "**/*.csproj"
      push: true
      use_dockerhub: true
    secrets:
      DOCKERHUB_ORG: mimirorg
      DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
      DOCKERHUB_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}

