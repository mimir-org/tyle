name: Create Docker images on release or manual trigger

on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      tags:
        description: Docker image tags, separated by commas

env:
  TAGS: >
    ${{
      github.event_name == 'workflow_dispatch' && github.event.inputs.tags ||
      (github.event.release.prerelease && format('stage,{0}', github.event.release.tag_name) ||
      github.event.release.tag_name )
    }}

jobs:

  # Check branch and release type logic
  check-branch-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Fail on branch and release mismatch
        if: >
          github.event_name == 'release' &&
          !((github.event.release.prerelease && github.event.release.target_commitish == 'stage')
          || (!github.event.release.prerelease && github.event.release.target_commitish == 'main'))
        run: exit 1
      - name: Succeed otherwise
        run: |
          echo 'Branch name and release type match, or action was manually triggered'

  # Output tags in correct format, separated by line breaks
  output-tags:
    runs-on: ubuntu-latest
    needs: check-branch-and-release
    outputs:
      tags: ${{ steps.output-tags.outputs.tags }}
    steps:
      - name: Output tags
        id: output-tags
        run: |
          formatted_tags=$(echo "$TAGS" | tr ',' '\n' | sed 's/^[[:space]]*//;s/[[:space:]]*$//')
          echo "tags=$formatted_tags" >> "$GITHUB_OUTPUT"

  # Build and push client to dockerhub
  build-client:
    needs: output-tags
    uses: mimir-org/mimir-actions/.github/workflows/docker-build-push-cached.yaml@main
    with:
      repository: typelibrary-client
      tags: ${{ needs.output-tags.outputs.tags }}
      context: ./src/client
      file: ./src/client/Dockerfile
      target: final
      hash_files_template: "**/package-lock.json"
      push: true
      use_dockerhub: true
    secrets:
      DOCKERHUB_ORG: mimirorg
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  # Build and push server to dockerhub
  build-server:
    needs: output-tags
    uses: mimir-org/mimir-actions/.github/workflows/docker-build-push-cached.yaml@main
    with:
      repository: typelibrary-server
      tags: ${{ needs.output-tags.outputs.tags }}
      context: ./src/server
      file: ./src/server/Dockerfile
      target: final
      hash_files_template: "**/*.csproj"
      push: true
      use_dockerhub: true
    secrets:
      DOCKERHUB_ORG: mimirorg
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}