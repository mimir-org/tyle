name: Create Docker images on release or manual trigger

on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      tags:
        description: Docker image tags, separated by commas

env:
  TAGS: >
    ${{
      github.event_name == 'workflow_dispatch' && github.event.inputs.tags
      || (github.event.release.prerelease && github.event.release.tag_name
      || format('{0},latest', github.event.release.tag_name))
      
    }}

jobs:

  # Check branch and release type logic
  check-branch-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Fail on branch and release mismatch
        if: >
          github.event_name == 'release' &&
          !((github.event.release.prerelease && github.event.release.target_commitish == 'stage')
          || (!github.event.release.prerelease && github.event.release.target_commitish == 'main'))
        run: exit 1
      - name: Succeed otherwise
        run: |
          echo 'Branch name and release type match, or action was manually triggered'

  # Output tags in the correct format, separated by newlines
  output-tags:
    runs-on: ubuntu-latest
    needs: check-branch-and-release
    outputs:
      tags: ${{ steps.output-tags.outputs.tags }}
    steps:
      - name: Output tags
        id: output-tags
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "tags<<$EOF" >> "$GITHUB_OUTPUT"
          IFS=','
          for item in $TAGS; do
            trimmed_item=$(echo "$item" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
            echo "$trimmed_item" >> "$GITHUB_OUTPUT"
          done
          echo "$EOF" >> "$GITHUB_OUTPUT"

  # Build and push client to Dockerhub
  build-and-push-client:
    needs: output-tags
    uses: ./.github/workflows/build-push.yaml
    with:
      build-target: client
      tags: |
        ${{ needs.output-tags.outputs.tags }}
    secrets: inherit

    # Build and push server to Dockerhub
  build-and-push-server:
    needs: output-tags
    uses: ./.github/workflows/build-push.yaml
    with:
      build-target: server
      tags: |
        ${{ needs.output-tags.outputs.tags }}
    secrets: inherit
